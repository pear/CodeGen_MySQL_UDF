<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE udf SYSTEM "udf_extension.dtd">
<udf name="regex">

  <maintainer>
    <name>Hartmut Holzgraefe</name>
    <email>hartmut@php.net</email>
  </maintainer>

  <license>PHP</license>

  <code role="header">
<![CDATA[
#include <sys/types.h>
#include "/home/hartmut/projects/mysql/dev/4.1/regex/regex.h"
]]>  
  </code>


  <function name="regex_match" returns="string" null="yes">
    <param name="pattern" type="string"/>
    <param name="text"    type="string"/>

    <data>
     <element name="expr"    type="regex_t"/>
     <element name="dynamic" type="int" />
    </data>               

    <init>
<?data
    if (pattern) {
        int stat;
        char *copy;

        copy = strndup(pattern, pattern_len);
        stat  = regcomp(&data->expr, copy, REG_EXTENDED, &my_charset_bin);
        free(copy);
        if (stat) {
            sprintf(message, "regcomp failed (error: %d)", stat);
            return 1; 
        }

        data->dynamic = 0;
    } else {
        data->dynamic = 1;
    }
?>
    </init>

    <deinit>
<?data
    if (!data->dynamic) {
        regfree(&data->expr);
    }
?>
    </deinit>

    <code>
<?data
	regmatch_t match;
	int stat;
    char *copy;
    
    if (data->dynamic) {
        copy = strndup(pattern, pattern_len);
        stat  = regcomp(&data->expr, copy, REG_EXTENDED, &my_charset_bin);
        free(copy);
        if (stat) {
            RETURN_STRINGL("foo", 3);
        }
    }

    copy = strndup(text, text_len);
    stat = regexec(&data->expr, text, 1, &match, 0);
    free(copy);

    if (data->dynamic) {
        regfree(&data->expr);
    }

    if (stat) {
        fprintf(stderr, "regexec error %d '%s' '%s'\n", stat, pattern, text);
        RETURN_NULL;
    }

    RETURN_STRINGL(text + match.rm_so, match.rm_eo - match.rm_so);

?>
    </code>
  </function>

  <function name="regex_match" returns="string" null="yes">
    <param name="pattern" type="string"/>
    <param name="replace" type="string"/>
    <param name="text"    type="string"/>

    <data>
     <element name="expr"    type="regex_t"/>
     <element name="dynamic" type="int" />
    </data>               

    <init>
    </init>

    <code>
    </code>

    <deinit>
    </deinit>
 
  </function>


</udf>